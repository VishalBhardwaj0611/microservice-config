server.port=9090

# Updated API Gateway application.properties (for GitHub Config)

# Authentication Service
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://authentication-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=0

# Customer Service (Updated port)
spring.cloud.gateway.routes[1].id=customer-service
spring.cloud.gateway.routes[1].uri=lb://CustomerService
spring.cloud.gateway.routes[1].predicates[0]=Path=/customers/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=0

# Alternative Customer Service Route with fallback
spring.cloud.gateway.routes[2].id=customer-service-fallback
spring.cloud.gateway.routes[2].uri=http://localhost:9091
spring.cloud.gateway.routes[2].predicates[0]=Path=/customers-direct/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/customers-direct/(?<segment>.*), /customers/$\{segment}

# Employee Service
spring.cloud.gateway.routes[3].id=employee-service
spring.cloud.gateway.routes[3].uri=lb://employee-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/employees/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=0

# Order Service
spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=lb://order-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/orders/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=0

# Service Discovery Routes (if using discovery locator)
# This allows access via: /customer-service/customers/code/CUST002

# Global CORS Configuration
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=false

jwt.secret=doritech_pUnQ10zB_pWUub3SxPGy_i0_fRyuGy912TZO4ZIiuwpreQ_Ax6KkzZ61jhCKv45WXsqsYZvnoMC786isTF5TFw==
jwt.expiration=3600000
